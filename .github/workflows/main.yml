name: Build X-Arch Docker image and Publish

on:
  push:
    branches: [ main ]
    paths-ignore: 
      - README.md
      - LICENSE
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: quay.io
      DOCKER_IMAGE: deichten/speedtest-exporter-arm
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_TARGET_PLATFORM: linux/arm/v7
      SPEEDTEST_LIC_STRING: ${{ secrets.SPEEDTEST_LIC_STRING }}
      SPEEDTEST_LIC_TIMESTAMP: ${{ secrets.SPEEDTEST_LIC_TIMESTAMP }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.3
      
      - name: Inject Speedtest-CLI license agreement
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "SPEEDTEST_LICENSE_ACCEPTANCE_STRING"
          replace: "${SPEEDTEST_LIC_STRING}"
          include: "speedtest-cli.json"
      
      - name: Inject Speedtest-CLI license timestamp
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "SPEEDTEST_TIMESTAMP"
          replace: "${SPEEDTEST_LIC_TIMESTAMP}"
          include: "speedtest-cli.json"

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v1

      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}
          echo ::set-output name=version::${GITHUB_RUN_NUMBER}
          
      - name: Docker Login
        if: success()
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 

      -
        name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

#      - name: Build&Push Container
#        if: success()
#        uses: docker/build-push-action@v2
#        with: 
#          context: .
#          file: ./Dockerfile
#          platforms: ${{ steps.prepare.outputs.docker_platform }}
#          push: true
#          tags: ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
